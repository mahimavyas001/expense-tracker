{"version":3,"sources":["Components/Balance.jsx","Components/ExpenseCard.jsx","Components/Transaction.jsx","Components/Transactions.jsx","Components/NewTransaction.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyle","makeStyles","balance","fontSize","marginBottom","Balance","transactions","useState","classes","total","map","transaction","amount","reduce","item","toFixed","Box","Typography","className","container","display","flex","padding","income","color","expense","ExpenseCard","filter","acc","Card","CardContent","list","marginTop","border","Transaction","deleteTransaction","Math","abs","ListItem","style","background","ListItemIcon","onClick","id","ListItemText","primary","text","component","heading","Transactions","variant","Divider","width","List","flexDirection","button","NewTransaction","addTransaction","setText","setAmount","TextField","value","label","onChange","e","target","Button","floor","random","header","margin","textTransform","borderRadius","height","App","setTransactions","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d35e07c1.chunk.js","sourcesContent":["\r\nimport { Typography, makeStyles, Box } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst useStyle = makeStyles({\r\n    balance: {\r\n        fontSize: 25,\r\n        marginBottom: 20\r\n    }\r\n})\r\n\r\nconst Balance = ({ transactions }) => {\r\n    const [balance, setBalance] = useState(0);\r\n    const classes = useStyle();\r\n    const amount = transactions.map(transaction => transaction.amount);\r\n    const total = amount.reduce((amount, item) => (amount += item), 0).toFixed(2);\r\n    \r\n    return (\r\n        <Box>\r\n            <Typography className={classes.balance}>Balance: ₹{total}</Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Balance;","\r\nimport { Card, CardContent, makeStyles, Typography, Box } from '@material-ui/core';\r\n\r\nconst useStyle = makeStyles({\r\n    container: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            flex: 1,\r\n            padding: 10\r\n        }\r\n    },\r\n    income: {\r\n        color: 'green'\r\n    },\r\n    expense: {\r\n        color: 'red'\r\n    }\r\n})\r\n\r\nconst ExpenseCard = ({ transactions }) => {\r\n    const classes = useStyle();\r\n\r\n    const amount = transactions.map(transaction => transaction.amount);\r\n    const income = amount.filter(item => item > 0).reduce((acc, item) => (acc+=item), 0).toFixed(2);\r\n    const expense = (amount.filter(item => item < 0).reduce((acc, item) => (acc+=item), 0) * -1).toFixed(2);\r\n    \r\n    return (\r\n        <Box className={classes.container}>\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography>Income</Typography>\r\n                    <Typography className={classes.income}>+₹{income}</Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography>Expense</Typography>\r\n                    <Typography className={classes.expense}>-₹{expense}</Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ExpenseCard;","import { ListItemText, ListItem, makeStyles, ListItemIcon } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyle = makeStyles({\r\n    list: {\r\n        display: 'flex',\r\n        marginTop: 10,\r\n        border: '1px solid #F6F6F6'\r\n    }\r\n})\r\n\r\nconst Transaction = ({transaction, deleteTransaction}) => {\r\n    const sign = transaction.amount >= 0 ? '₹' : '-₹';\r\n    const amount = sign + Math.abs(transaction.amount);\r\n    const color = transaction.amount >=0 ? 'Green' : 'Red';\r\n    const classes = useStyle();\r\n\r\n     \r\n\r\n    return (\r\n        <ListItem style={{background: `${color}`, color: '#fff'}} className={classes.list}>\r\n            <ListItemIcon>\r\n                <DeleteIcon onClick={() => deleteTransaction(transaction.id)} />\r\n            </ListItemIcon>\r\n            <ListItemText primary={transaction.text} />\r\n            <ListItemText primary={amount} />\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default Transaction;","import { Typography, List, Divider, makeStyles, Box } from '@material-ui/core';\r\nimport Transaction from './Transaction';\r\n\r\nconst useStyle = makeStyles({\r\n    component: {\r\n        '& > *': {\r\n            marginBottom: 10\r\n        }\r\n    },\r\n    heading: {\r\n\r\n    }\r\n})\r\n\r\nconst Transactions = ({ transactions, deleteTransaction }) => {\r\n    const classes = useStyle();\r\n\r\n    return (\r\n        <Box className={classes.component}>\r\n            <Typography variant=\"h5\">Transaction History</Typography>\r\n            <Divider style={{width: '100%'}} />\r\n            <List>\r\n                {\r\n                    transactions.map(transaction => {\r\n                        return <Transaction transaction={transaction} deleteTransaction={deleteTransaction} key={transaction.id} />\r\n                    })\r\n                }\r\n            </List>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Transactions;","import { useState } from 'react';\r\nimport { Typography, Box, TextField, Button, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyle = makeStyles({\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        '& > *': {\r\n            marginTop: 30\r\n        }\r\n    },\r\n    button: {\r\n        background: '#445A6F',\r\n        color: '#fff'\r\n    }\r\n});\r\n\r\nconst NewTransaction = ({ addTransaction }) => {\r\n    const classes = useStyle();\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState();\r\n\r\n    const newTransaction = e => {\r\n        const transaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text: text,\r\n            amount: +amount\r\n        }\r\n        addTransaction(transaction);\r\n    }\r\n    \r\n    return (\r\n        <Box className={classes.container}>\r\n            <Typography variant=\"h5\">New Transaction</Typography>\r\n            <TextField value={text} label=\"Enter Expense\" onChange = {(e) => setText(e.target.value)} />\r\n            <TextField value={amount} label=\"Enter Amount\" onChange = {(e) => setAmount(e.target.value)}  />\r\n            <Button className={classes.button} variant=\"contained\" onClick={newTransaction}>Add Transaction</Button>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default NewTransaction;","import { useState } from 'react';\r\nimport { Typography, Box, makeStyles } from '@material-ui/core';\r\nimport './App.css';\r\nimport Balance from './Components/Balance';\r\nimport ExpenseCard from './Components/ExpenseCard';\r\nimport Transactions from './Components/Transactions';\r\nimport NewTransaction from './Components/NewTransaction';\r\nimport { useEffect } from 'react';\r\n\r\nconst useStyle = makeStyles({\r\n  header: {\r\n    margin: '10px 0',\r\n  \tcolor: 'blue',\r\n\t  fontSize: 36,\r\n\t  textTransform: 'uppercase',\r\n  },\r\n  component: {\r\n    background: '#FFF',\r\n    padding: 10,\r\n    borderRadius: 20,\r\n    display: 'flex',\r\n    width: 800,\r\n    '& > *': {\r\n      padding: 10,\r\n      width: '50%',\r\n      height: '70vh'\r\n    }\r\n  }\r\n})\r\n\r\nfunction App() {\r\n  const classes = useStyle();\r\n\r\n  const [transactions, setTransactions] = useState([\r\n    { id: 1, text: 'Momos', amount: -20},\r\n    { id: 2, text: 'Salary', amount: 3000},\r\n    { id: 3, text: 'Book', amount: -100},\r\n    { id: 4, text: 'Bonus', amount: 1500 },\r\n  ]);\r\n\r\n  const deleteTransaction = (id) => {\r\n    console.log(id);\r\n    setTransactions(transactions.filter(transaction => transaction.id !== id));\r\n    console.log(transactions);\r\n  }\r\n\r\n  const addTransaction = (transaction) => {\r\n    setTransactions(transactions => [transaction, ...transactions]);\r\n    console.log(transaction);\r\n    console.log(transactions);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Typography className={classes.header}>Expense Tracker</Typography>\r\n      <Box className={classes.component}>\r\n        <Box>\r\n          <Balance transactions={transactions} />\r\n          <ExpenseCard transactions={transactions} />\r\n          <NewTransaction addTransaction={addTransaction}/>\r\n        </Box>\r\n        <Box>\r\n          <Transactions transactions={transactions} deleteTransaction={deleteTransaction}/>\r\n        </Box>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}